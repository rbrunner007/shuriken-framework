#!/usr/bin/python
import socket, os, sys, re

TARGET = os.environ['TARGET_HOST']
SERVER = os.environ['FLAG_HOST']
PORT = os.environ['FLAG_PORT']
PROTO = os.environ['FLAG_PROTO']
TEAM = os.environ['TEAM_NAME']

# connects to the flag submission server and sends flag to it
def submit_flag(flag):
    with socket.socket() as s:
        s.connect((SERVER, PORT))
        sys.stderr.write(s.recv(1024))
        s.sendall((flag + "\n").encode())
        sys.stderr.write(s.recv(1024))

# takes in a string, returns a flag if one is found which matches the format
def parse_flag(data):
    match = re.search(r'FAUST_.{32}', data)
    return match.group(0)


# exploit goes here

# workflow:
# connect to TARGET
# execute exploit, receive flag data
# deobfuscate using parse_flag
# end with call to submit_flag
